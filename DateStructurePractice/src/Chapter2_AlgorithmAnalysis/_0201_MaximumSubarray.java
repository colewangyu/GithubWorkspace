package Chapter2_AlgorithmAnalysis;

/**
 * Created by wy on 2016-03-29.
 */
public class _0201_MaximumSubarray {
    public static void main(String[] args) {
        double startTime;  //运行开始时间
        double endTime;  //运行结束时间
        int maxsubarraySum;  //最大子序列和
        int[] intArray = new int[]
                {1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1,
                        1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1,
                        1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1,
                        1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1,
                        1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1,
                        1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1,
                        1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1,
                        1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1,
                        1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1,
                        1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1,
                        1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1,
                        1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1,
                        1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1,
                        1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1,
                        1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1,
                        1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1,
                        1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1,
                        1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1,
                        1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1,
                        1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1,
                        1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1,
                        1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1,
                        1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1,
                        1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1,
                        1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1,
                        1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1,
                        1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1,
                        1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1,
                        1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1,
                        1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1,
                        1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1,
                        1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1,
                        1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1,
                        -1, 1, 2, -1, -4, 3, 4, 2, 1, -1, 1, 2, -1, -4, 3, 4, 2, 1, -1};

        startTime = System.currentTimeMillis();
        maxsubarraySum = getMaxsubarraySum1(intArray);
        endTime = System.currentTimeMillis();
        System.out.println("第1种方法耗时O(n3):" + (endTime - startTime) + " ms,子序列和为：" + maxsubarraySum);

        startTime = System.currentTimeMillis();
        maxsubarraySum = getMaxsubarraySum2(intArray);
        endTime = System.currentTimeMillis();
        System.out.println("第2种方法耗时O(nlogn):" + (endTime - startTime) + " ms,子序列和为：" + maxsubarraySum);

        startTime = System.currentTimeMillis();
        maxsubarraySum = getMaxsubarraySum4(intArray);
        endTime = System.currentTimeMillis();
        System.out.println("第4种方法耗时O(n):" + (endTime - startTime) + " ms,子序列和为：" + maxsubarraySum);
    }

    /**
     * 第一种方法：遍历所有子序列的情况，计算子序和
     * O(n3)
     */
    public static int getMaxsubarraySum1(int[] a) {
        int maxsubarraySum; //最大子序列和
        int subarraySum;  //子序列和
        int length;  //序列长度
        length = a.length;

        maxsubarraySum = 0;
        //外层两个for循环遍历所有子序列
        for (int i = 0; i < length; i++) {
            for (int j = i; j < length; j++) {
                subarraySum = 0;
                //计算当前子序列和
                for (int k = i; k <= j; k++) {
                    subarraySum += a[k];
                }
                //判断当前子序列和的大小
                if (subarraySum > maxsubarraySum) {
                    maxsubarraySum = subarraySum;
                }
            }
        }
        return maxsubarraySum;
    }

    /**
     * 第二种方法：以每个字符为起点，计算起所有子序列的和
     * O(NlogN)
     */
    public static int getMaxsubarraySum2(int[] a) {
        int maxsubarraySum; //最大子序列和
        int subarraySum;  //子序列和
        int length;  //序列长度
        length = a.length;

        maxsubarraySum = 0;
        //外层两个for循环遍历所有子序列
        for (int i = 0; i < length; i++) {
            subarraySum = 0;
            for (int j = i; j < length; j++) {
                //计算当前子序列和
                subarraySum += a[j];
                //判断当前子序列和的大小
                if (subarraySum > maxsubarraySum) {
                    maxsubarraySum = subarraySum;
                }
            }
        }
        return maxsubarraySum;
    }


    /**
     * 第四种方法：（最佳办法）
     * O(n)
     */
    public static int getMaxsubarraySum4(int[] a) {
        int maxsubarraySum; //最大子序列和
        int subarraySum;  //子序列和
        int length;  //序列长度
        length = a.length;

        subarraySum = 0;
        maxsubarraySum = Integer.MIN_VALUE;
//        subarraySum = 0;
        //外层两个for循环遍历所有子序列
        for (int i = 0; i < length; i++) {
            //计算当前子序列和
            subarraySum += a[i];
            //判断当前子序列和的大小
            if (subarraySum > maxsubarraySum) {
                maxsubarraySum = subarraySum;
            }
            if (subarraySum < 0) {
                //如果为负，则舍弃之，从头开始计算子序列和
                subarraySum = 0;
            }
        }
        return maxsubarraySum;
    }
}
